package com.hdilhara.clientserver.controller;

import java.util.Base64;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

@RestController
public class AppController {

	@GetMapping("/")
	public String home(HttpServletResponse response, HttpServletRequest request) {
		System.out.println(request.getCookies()[0].getName());
		response.addCookie(new Cookie("Thilina", "Dilhara"));
		
		return "home";
	}
	
	@GetMapping("/login")
	public String getTokenByCode( @RequestParam("code") String code ) {
		String clientId = "client";
        String clientSecret = "secret";
        String tokenUri = "http://localhost:9006/oauth/token";
        String authorizationUri = "http://localhost:9006/oauth/authorize";
        String redirectUri = "http://localhost:9000/login";
        String result;
		
		System.out.println("code :"+code);
		
		HttpHeaders headers = new HttpHeaders();
        RestTemplate restTemplate = new RestTemplate();
        Map<String,String> jsonObject = new HashMap<>();


        String auth = clientId + ":" + clientSecret;
//        byte[] encodedAuth = Base64.encodeBase64( 
//           auth.getBytes(Charset.forName("US-ASCII")) );
        String authHeader = "Basic " +Base64.getEncoder().encodeToString(auth.getBytes());
// new String( encodedAuth );
        headers.set( "Authorization", authHeader);
//        set( "Authorization", authHeader );
        System.out.println(authHeader);
        
        headers.setContentType(MediaType.APPLICATION_JSON);
//        jsonObject.put("client_id",clientId);
//        jsonObject.put("client_secret",clientSecret);
        jsonObject.put("code", code);
        jsonObject.put("redirect_uri",redirectUri);
        jsonObject.put("grant_type","authorization_code");

        HttpEntity<Map<String,String>> request = new HttpEntity<>(jsonObject,headers);
        result = restTemplate.postForObject(tokenUri,request,String.class);
		System.out.println("Token>>>"+result);
		return "Get token by code";
	}
	
	@GetMapping("/getToken")
    public Map<String,String> getToken(@RequestParam("code") String code){
        String clientId = "59d0733b7f0d1b5be95e";
        String clientSecret = "d1527c200b67324e180d04ea4b809e7b3638bcf1";
        String tokenUri = "https://github.com/login/oauth/access_token";
        String authorizationUri = "https://www.github.com/login/oauth/authorize";
        String redirectUri = "http://localhost:3000/login";
        String result;
        HttpHeaders headers = new HttpHeaders();
        RestTemplate restTemplate = new RestTemplate();
        Map<String,String> jsonObject = new HashMap<>();


        headers.setContentType(MediaType.APPLICATION_JSON);
        jsonObject.put("client_id",clientId);
        jsonObject.put("client_secret",clientSecret);
        jsonObject.put("code", code);
        jsonObject.put("redirect_uri",redirectUri);

        HttpEntity<Map<String,String>> request = new HttpEntity<>(jsonObject,headers);
        result = restTemplate.postForObject(tokenUri,request,String.class);

        String[] res = new String[5];
        res = result.split("&");
        String[] token = res[0].split("=");

        Map<String,String> resultJson = new HashMap<>();
        resultJson.put("token", token[1]);

        System.out.println(result);

        return resultJson;
    }
	
}
